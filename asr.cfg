# Arbitrary size of srate and fragsize to arrive at 100Hz processing rate
srate=48000
fragsize=480
# Use dummy io lib for mock realtime processing
iolib=MHAIODummy
mhalib=mhachain
# lsl2ac is used to receive data from lsl, asr
# is our mASR plugin, acrec:asr_in copies out the
# input data, acrec:asr_out writes the output to disk
mha.algos=[lsl2ac asr acrec:asr_in acrec:asr_out]
# Do not discard overrun
mha.lsl2ac.overrun_behavior=ignore
mha.lsl2ac.streams=[SimpleStream]
mha.lsl2ac.chunksize=10
# Name of the input ac variable
mha.asr.VarName=SimpleStream
# Filename of the calibration file
mha.asr.CalibrationFileName=mASR-testdata/calib.csv

# Write out the SimpleStream ac variable to disk, to not use the date/time as file name
# suffix, start recording now
mha.asr_in.varname=SimpleStream
mha.asr_in.use_date=no
mha.asr_in.prefix=asr_in
mha.asr_in.record=yes

# Write out the asr_out ac variable to disk, to not use the date/time as file name
# suffix, start recording now
mha.asr_out.varname=asr_out
mha.asr_out.use_date=no
mha.asr_out.prefix=asr_out
mha.asr_out.record=yes

# Usage: mha ?read:asr.cfg cmd=start sleep=90 cmd=quit